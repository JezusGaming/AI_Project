#pragma once
#include "Renderer2D.h"
#include "AStarNode.h"

struct GridNode;
class AStar;

class Grid
{
public:
	//----------------------------------------------------------------------------
	// draws textures for this class and sets camera
	//
	// param:
	//		m_2dRenderer: pointer to all the render functions such as drawsprite
	//----------------------------------------------------------------------------
	void Draw(aie::Renderer2D*	m_2dRenderer);

	//----------------------------------------------------------------------------
	// returns the grid of the index
	//----------------------------------------------------------------------------
	GridNode* GetGrid(int nIndex);

	//----------------------------------------------------------------------------
	// creates a new Grid
	//----------------------------------------------------------------------------
	static void Create();
	//----------------------------------------------------------------------------
	// deletes a Grid
	//----------------------------------------------------------------------------
	static void Destroy();
	//----------------------------------------------------------------------------
	// returns a grid
	//----------------------------------------------------------------------------
	static Grid* GetInstance();

private:
	//----------------------------------------------------------------------------
	// default constructor
	//----------------------------------------------------------------------------
	Grid();

	//----------------------------------------------------------------------------
	// default destructor
	//----------------------------------------------------------------------------
	~Grid();

	GridNode** m_ppGrid;
	AStar* m_pAStar;

	static Grid* m_pInstance;
};



